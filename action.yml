name: 'Cache always'
description: '"Live patches" `action/cache` to cache even when the job fails'
author: 'Olf0'
branding:
  icon: 'archive'
  color: 'gray-dark'

inputs:
  path:
    description: 'A list of files, directories, and wildcard patterns to cache and restore'
    required: true
  key:
    description: 'An explicit key for restoring and saving the cache'
    required: true
  restore-keys:
    description: 'An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.'
    required: false

outputs:
  cache-hit:
    description: 'A boolean value to indicate an exact match was found for the primary key'
    value: ${{ steps.cache.outputs.cache-hit }}

env: 
  PatchedCacheAction_PATH: $GITHUB_WORKSPACE/.github/.tmp/actions/always-cache

runs:
  using: 'composite'
  steps:
    # Instead of running `actions/cache@v3` directly, check it out locally and patch it.
    - name: Prepare
      run: mkdir -p $PatchedCacheAction_PATH
      shell: sh

    - name: 'Checkout actions/cache'
      uses: actions/checkout@v3
      with:
        repository: actions/cache
        ref: v1
        path: ${{ env.PatchedCacheAction_PATH }}

    - name: 'Patch actions/cache'
      # Caches on success and failures by default, plus also on cancelled workflows if environment variable ALWAYS_SAVE_CACHE is set to 'true'.
      run: sed -i "s/ \('\?\)success()\1\$/ \${{ \1success()\1 || \1failure()\1/ || env.ALWAYS_SAVE_CACHE == 'true' }}" $PatchedCacheAction_PATH/action.yml
      shell: sh

    - name: Cache
      id: cache
      uses: $PatchedCacheAction_PATH  # Does insist on "Expected format {org}/{repo}[/path]@ref".  Hence have to ckeck-out, alter and commit in own repo by a workflow.  Even transforming into a reusable workflow does not change that, because while it may alternatively called by "./.github/workflows/{filename}", it must reside _in the same repository_: https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow
      with:
        path: ${{ inputs.path }}
        key: ${{ inputs.key }}
        restore-keys: ${{ inputs.restore-keys }}
