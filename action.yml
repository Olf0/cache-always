name: 'Cache always'
description: '"Live patches" `action/cache` to cache even when the job fails'
author: 'Olf0'
branding:
  icon: 'archive'
  color: 'gray-dark'

inputs:
  path:
    description: 'A list of files, directories, and wildcard patterns to cache and restore'
    required: true
  key:
    description: 'An explicit key for restoring and saving the cache'
    required: true
  restore-keys:
    description: 'An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.'
    required: false
  upload-chunk-size:
    description: 'The chunk size used to split up large files during upload, in bytes'
    required: false
  enableCrossOsArchive:
    description: 'An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms'
    default: 'false'
    required: false
  fail-on-cache-miss:
    description: 'Fail the workflow if cache entry is not found'
    default: 'false'
    required: false
  lookup-only:
    description: 'Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache'
    default: 'false'
    required: false

outputs:
  cache-hit:
    description: 'A boolean value to indicate an exact match was found for the primary key'
    value: ${{ steps.cache.outputs.cache-hit }}

env: 
  PatchedCacheAction_PATH: $GITHUB_WORKSPACE/.github/.tmp/actions/always-cache

runs:
  using: 'composite'
  steps:
    # Instead of running `actions/cache@v3` directly, check it out locally and patch it.
    - name: Prepare
      run: mkdir -p $PatchedCacheAction_PATH
      shell: sh

    - name: 'Checkout actions/cache'
      uses: actions/checkout@v3
      with:
        repository: actions/cache
        ref: v
        path: ${{ env.PatchedCacheAction_PATH }}

    - name: 'Patch actions/cache'
      run: sed -i 's/ost-if: \(.\?\)success()\1$/ost-if: \1success()\1 || \1failure()\1/' $PatchedCacheAction_PATH/action.yml
      shell: sh

    - name: Cache
      id: cache
      uses: ${{ env.PatchedCacheAction_PATH }}
      with:
        path: ${{ inputs.path }}
        key: ${{ inputs.key }}
        restore-keys: ${{ inputs.restore-keys }}
        upload-chunk-size: ${{ inputs.upload-chunk-size }}
        enableCrossOsArchive: ${{ inputs.enableCrossOsArchive }}
        fail-on-cache-miss: ${{ inputs.fail-on-cache-miss }}
        lookup-only: ${{ inputs.lookup-only }}
